{
  "create":"The create command requires a name for the knowledge object.\nIt can only run at the shelf level or the KO level.\n\nA folder for the knowledge object will be created.\nAn implementation will be created and initialized in the folder of [ko].\n\nIf the specified KO exists, an implementation will be added to the KO.\n\nIMPLEMENTATION NAME:\n  The user will be prompted to enter a name;\n  Or, the name can be specified on the command line using the flag -i.\n\nARK ID:\n  A development ARK ID will be assigned {username}/{ko}/{implementation}.\n  The ARK ID is unique by having different implementation names in the same KO.\n\nIMPLEMENTATION TEMPLATE TYPE:\n  The implementation will be initialized using one of the templates.\n  The template can be specified using the flags:\n    --simple    for the template with simple JAVASCRIPT file as payload\n    --bundled   for the template with JAVASCRIPT file(s); the payload will require bundling\n    --executive for the template with simple JAVASCRIPT file as payload calling other KOs\n  By default, the simple template will be used",
  "setup":"KGrid Activator and Library JAR files will be downloaded and installed.\n\nBy default, the components will be downloaded and saved in /.kgrid under current directory.\n\nThe flag -g can be used to install the KGrid components as globally accessible.\n\nThe global location will be the folder defined by the environment variable of KGRID_HOME.\n\nIF KGRID_HOME is not defined, the user home will be used.",
  "start":"This command will start both KGrid Activator and KGrid Library.\n\nBy default, the command will use the current directory as the shelf.\nThe shelf can be specified using the flag -s.\n\nThe default ports for Activator and Library are 8080 and 8081, respectively.\n\nKGrid Activator and KGrid Library can be started individually, also with more options for configuration.\nSee the commands listed below.",
  "startactivator":"This command starts KGrid Activator at the default port of 8080.\n\nThe port can be configured using the flag -p.\n  Example: kgrid start:activator -p 8088\n\nThe current directory will be used as the default shelf unless specified using the flag -s.",
  "startlibrary":"This command starts KGrid Library at the default port of 8080.\n\nThe port can be configured using the flag -p.\n  Example: kgrid start:library -p 8088\n\nThe current directory will be used as the default shelf unless specified using the flag -s.",
  "package":"The package command will package the specified KO into a ZIP file, ready for depositing into a KGrid Library or deploying to a KGrid Activator.\n\nIf running at the shelf level, it requires a name for the knowledge object.\nThe flag -i can be used to specify the implementation you'd like to package.\n\nIf running at the KO level, the flag -i can be used to specify the implementation\nIf a KO name is also provided at the command line, the name will be ignored.\n\nIf running at the implementation level, the current implementation will be packaged.\nAny command line inputs will be ignored.\n",
  "play":"The play command will let the user to select and interact with an activated KO implementation using the online Swagger Editor.\n\nThe implementation can be specified using the argument [ko] and the option of '-i'.\nOr it can be selected from a list of the activated implementations.\n\nA local KGRID activator needs to be running to use the play command.\nIf the activator is not running at the default port, use the option of '-p' to specify the port."
}
